FROM node:22-alpine AS base

# Install pnpm
RUN corepack enable && corepack prepare pnpm@latest --activate

# Set up workspace
WORKDIR /app

# Build stage
FROM base AS builder

# Copy only package files first to leverage Docker caching
COPY pnpm-lock.yaml ./
COPY package.json ./

# Install dependencies (with caching)
RUN pnpm fetch

# Copy application code
COPY . .

# Install with offline mode (using cache)
RUN pnpm install --frozen-lockfile --offline

# Generate runnable products (using modern deploy)
RUN pnpm run deploy

# Production stage - use minimal image for smaller size
FROM node:22-alpine AS runner

WORKDIR /app

# Create a non-root user for better security
RUN addgroup --system --gid 1001 nodejs && \
  adduser --system --uid 1001 modernjs && \
  chown -R modernjs:nodejs /app

# Copy standalone build files (config enabled in modern.config.js)
COPY --from=builder --chown=modernjs:nodejs /app/.output ./.output

USER modernjs

# Set hostname to 0.0.0.0 to make it accessible from outside the container
ENV HOSTNAME=0.0.0.0

# Expose the port the app runs on
ENV PORT={{ port }}
EXPOSE {{ port }}

# Run the app using the standalone server generated by modern.js
CMD ["node", ".output/index.js"]
